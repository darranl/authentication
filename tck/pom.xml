<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2022, 2022 Contributors to Eclipse Foundation. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>1.0.6</version>
        <relativePath/>
    </parent>

    <groupId>org.eclipse.ee4j.tck.authentication</groupId>
    <artifactId>jakarta-authentication-tck</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Jakarta Authentication TCK - main</name>

    <modules>
        <!-- Not a module with tests, but contains common code for the other modules -->
        <module>common</module>

        <!-- Tests a simple authentication from both public and protected resources -->
        <module>basic-authentication</module>
        
        <!-- Variant of basic-authentication that tests whether a custom principal that's set by a SAM is available
             in a Servlet via HttpServletRequest#getUserPrincipal
         -->
        <module>custom-principal</module>
        
        <!-- Tests a simple authentication like basic-authentication, but uses
             request.authenticate instead of the authentication prior to invoking
             the resource.
         -->
        <module>programmatic-authentication</module>

        <!-- Tests that the main methods of Jakarta Authentication artifacts like the SAM are called by the container at the right moment -->
        <module>lifecycle</module>
        
        <!-- Like Jakarta Servlet filters, a Jakarta Authentication SAM for the Servlet Profile can wrap the request and response. This tests that 
            this indeed happens. 
        -->
        <module>wrapping</module>
        
         <!-- Jakarta Authentication is normally stateless but it can semi-transparently 
             remember an authenticated identity (semi, because the SAM will still be called and has to explicitly
             indicate it wants to continue this remembered session). This tests that remembering a session indeed works.
         -->
        <module>register-session</module>
        
         <!-- Tests behavior of authentication involving asynchronous requests -->
        <module>async-authentication</module>
        
        <!-- Tests that a SAM is able to set a status code into the response -->
        <module>status-codes</module>
        
         <!-- Like a Servlet a Jakarta Authentication SAM for the Servlet Profile can dispatch a request via a forward or include. This tests that 
            this is indeed possible by using plain Servlets and nothing else. -->
        <module>dispatching</module>
        
        <!-- Like a Servlet a Jakarta Authentication SAM for the Servlet Profile can dispatch a request via a forward or include. This tests that 
            this is indeed possible by using Servlets that are injected with a CDI bean and Jakarta Faces views. -->
        <module>dispatching-jsf-cdi</module>
        
        <!-- Tests that an established authenticated identity by Jakarta Authentication propagates correctly to the Enterprise Beans layer -->
        <module>ejb-propagation</module>
        
        <!-- Tests that an established authenticated identity by Jakarta Authentication via the register session feature propagates 
            correctly to the Enterprise Beans layer -->
        <module>ejb-register-session</module>
        
        <!-- Tests that an established authenticated identity by Jakarta Authentication propagates correctly to a Jakarta Authorization provider -->
        <module>jacc-propagation</module>
        
        <!-- Tests that a SAM is able to invoke Enterprise beans and CDI beans. 
        -->
        <module>invoke-ejb-cdi</module>
        
    </modules>

    <properties>
        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Tests to skip interactions with certain technologies if not appropriate for an environment -->
        <skipEJB>false</skipEJB>
        <skipCDI>false</skipCDI>
        <skipJSF>false</skipJSF>
        <skipJACC>false</skipJACC>

        <maven.test.skip>false</maven.test.skip>
        <skipTests>false</skipTests>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.7.0.Alpha10</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-container-test-api</artifactId>
                <version>1.7.0.Alpha10</version>
            </dependency>
            <dependency>
                <groupId>org.omnifaces.arquillian</groupId>
                   <artifactId>glassfish-client-ee9</artifactId>
                <version>1.0</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.authentication</groupId>
            <artifactId>jakarta.authentication-api</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>jakarta.authorization</groupId>
            <artifactId>jakarta.authorization-api</artifactId>
            <version>2.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <version>4.0.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.0</version>
            <scope>provided</scope>
        </dependency>


        <!-- Test dependencies which can be used in sub-modules -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.61.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>jakarta-staging</id>
            <snapshots />
            <url>https://jakarta.oss.sonatype.org/content/repositories/staging</url>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.12.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>true</attachClasses>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <finalName>${project.build.finalName}</finalName>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M6</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <linkXRef>true</linkXRef>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <!-- Profiles for the application servers against which the tests are run -->
    <profiles>

        <profile>
            <id>custom</id>
        </profile>


        <!-- ### GlassFish ### -->

        <profile>
            <id>glassfish-ci-managed</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <glassfish.version>7.0.0-M4</glassfish.version>
                <glassfish.root>${maven.multiModuleProjectDirectory}/target</glassfish.root>
            </properties>

            <dependencies>
                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>org.omnifaces.arquillian</groupId>
                    <artifactId>arquillian-glassfish-server-managed</artifactId>
                    <version>1.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                    <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${glassfish.root}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                         <artifactId>maven-surefire-plugin</artifactId>
                         <configuration>
                             <systemPropertyVariables>
                                 <glassfish.home>${glassfish.root}/glassfish7</glassfish.home>
                             </systemPropertyVariables>
                         </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>payara-ci-managed</id>
            <properties>
                <payara.root>${maven.multiModuleProjectDirectory}/target</payara.root>
                <payara.version>6.2022.1.Alpha3-SNAPSHOT</payara.version>
                <payara.arquillian.container.version>3.0.alpha3</payara.arquillian.container.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <version>${payara.arquillian.container.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee9</artifactId>
                    <scope>test</scope>
                    <version>${payara.arquillian.container.version}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${payara.root}</outputDirectory>
                                    <markersDirectory>${payara.root}/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>payara</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${payara.root}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <payara.home>${payara.root}/payara6</payara.home>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>is-tck-root</id>
            <activation>
                <file>
                    <exists>zip.xml</exists>
                </file>
            </activation>

            <properties>
                <wildfly.skip>false</wildfly.skip>
            </properties>
        </profile>
        <profile>
            <id>is-not-tck-root</id>
            <activation>
                <file>
                    <missing>zip.xml</missing>
                </file>
            </activation>

            <properties>
                <wildfly.skip>true</wildfly.skip>
            </properties>
        </profile>
        <profile>
            <id>wildfly</id>

            <properties>
                <!--  Versions -->
                <version.jakarta.servlet>6.0.0</version.jakarta.servlet>
                <version.org.jboss.galleon>4.2.8.Final</version.org.jboss.galleon>
                <version.org.jboss.logging>3.4.3.Final</version.org.jboss.logging>
                <version.org.jboss.remoting-jmx>3.0.4.Final</version.org.jboss.remoting-jmx>
                <version.org.wildfly>27.0.0.Alpha2-SNAPSHOT</version.org.wildfly>
                <version.org.wildfly.arquillian>5.0.0.Alpha2</version.org.wildfly.arquillian>
                <version.org.wildfly.core>19.0.0.Beta11</version.org.wildfly.core>
                <version.org.wildfly.wildfly-maven-plugin>3.0.0.Final</version.org.wildfly.wildfly-maven-plugin>
                <version.org.wildfly.plugins>2.0.2.Final</version.org.wildfly.plugins>
                

                <!-- Build Properties -->
                <galleon.fork.embedded>true</galleon.fork.embedded>
                <galleon.log.time>true</galleon.log.time>
                <galleon.offline>false</galleon.offline>
                
                <wildfly.home>${project.build.directory}/wildfly</wildfly.home>
                <test.wildfly.home>${project.basedir}/../target/wildfly</test.wildfly.home>
                <debugJvmArgs/>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>jakarta.servlet</groupId>
                    <artifactId>jakarta.servlet-api</artifactId>
                    <version>${version.jakarta.servlet}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                    <version>${version.org.jboss.logging}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.remotingjmx</groupId>
                    <artifactId>remoting-jmx</artifactId>
                    <version>${version.org.jboss.remoting-jmx}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-common</artifactId>
                    <version>${version.org.wildfly.arquillian}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.org.wildfly.arquillian}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.core</groupId>
                    <artifactId>wildfly-controller-client</artifactId>
                    <version>${version.org.wildfly.core}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.core</groupId>
                    <artifactId>wildfly-launcher</artifactId>
                    <version>${version.org.wildfly.core}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-plugin-core</artifactId>
                    <version>${version.org.wildfly.plugins}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>
                        <version>${version.org.jboss.galleon}</version>
                        <configuration>
                            <skip>${wildfly.skip}</skip>
                            <install-dir>${wildfly.home}</install-dir>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>${galleon.offline}</offline>
                            <plugin-options>
                                <!--<jboss-maven-dist/> -->
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                <jboss-jakarta-transform-artifacts>true</jboss-jakarta-transform-artifacts>
                            </plugin-options>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-preview-feature-pack</artifactId>
                                    <version>${version.org.wildfly}</version>
                                    <inherit-configs>false</inherit-configs>
                                    <included-configs>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full.xml</name>
                                        </config>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone.xml</name>
                                        </config>
                                    </included-configs>
                                    <excluded-packages>
                                        <name>product.conf</name>
                                        <name>docs.schema</name>
                                        <name>appclient</name>
                                        <name>domain</name>
                                    </excluded-packages>
                                </feature-pack>
                            </feature-packs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>server-provisioning</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.wildfly-maven-plugin}</version>
                        <configuration>
                            <skip>${wildfly.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>configure-server</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <jboss-home>${wildfly.home}</jboss-home>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>${project.basedir}/wildfly/configure-server.cli</script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                        <artifactId>echo-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <configuration>
                            <message>
                               WildFly Home = ${wildfly.home}
                            </message>
                        </configuration>
                        <executions>
                            <execution>
                                <id>server-provisioning</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>echo</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!-- tag::logging[] -->
                            <systemProperties>
                                <property>
                                    <name>java.util.logging.config.file</name>
                                    <value>${logging.config}</value>
                                </property>
                            </systemProperties>
                            <!-- end::logging[] -->
                            <!-- tag::ignore[] -->
                            <systemPropertyVariables>
                                <!-- Properties shared with Arquillian -->
                                <tck_server>${jboss.server.name}</tck_server>
                                <tck_hostname>localhost</tck_hostname>
                                <tck_username>tck_username</tck_username>
                                <tck_password>tck_password</tck_password>
                                <tck_port>8080</tck_port>
                                <tck_port_secure>8443</tck_port_secure>
                            </systemPropertyVariables>
                            <!-- end::ignore[] -->
                        </configuration>
                    </plugin>
                </plugins>
                
                <testResources>
                    <testResource>
                        <directory>${project.basedir}/../wildfly</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>arquillian.xml</include>
                        </includes>
                    </testResource>
                </testResources>
            </build>
        </profile>
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>debug</name>
                </property>
            </activation>
            <properties>
                <debug.port>8787</debug.port>
                <debugJvmArgs>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:${debug.port}</debugJvmArgs>
            </properties>
        </profile>
    <!-- 
            The profiles for Tomcat and Piranha are currently out of date and don't' work.
            They are here as starter for future working profiles.
        -->


        <!-- ### PIRANHA ### -->

        <profile>
            <id>piranha-embedded-micro</id>
            
            <properties>
                <piranha.version>22.4.0</piranha.version>
            </properties>

            <dependencies>
                <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>org.omnifaces.arquillian</groupId>
                    <artifactId>glassfish-client-ee9</artifactId>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>cloud.piranha.arquillian</groupId>
                    <artifactId>piranha-arquillian-server</artifactId>
                    <version>${piranha.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <piranha.offline>true</piranha.offline>
                                <piranha.async.timeout>1000</piranha.async.timeout>
                                <trimStackTrace>false</trimStackTrace>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>



        <!-- ### TOMCAT ### -->

        <profile>
            <id>tomcat-remote</id>

            <properties>
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-tomcat-remote-7</artifactId>
                    <version>1.2.0.Alpha1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>tomcat-remote</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
       
        <profile>
            <id>tomcat-ci-managed</id>

            <properties>
                <tomcat.version>10.1.0-M14</tomcat.version>
                
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
            </properties>

            <repositories>
                <!-- Released versions of Tomcat -->
                <repository>
                    <id>apache.public</id>
                    <url>https://repository.apache.org/content/repositories/public/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>

                <!-- About to be released version of Tomcat -->
                <repository>
                    <id>apache.staging</id>
                    <url>https://repository.apache.org/content/repositories/staging/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-tomcat-managed-8</artifactId>
                    <version>1.2.0.Alpha1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-tomcat</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.apache.tomcat</groupId>
                                            <artifactId>tomcat</artifactId>
                                            <version>${tomcat.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-tomcat-users</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jakartaee</groupId>
                                            <artifactId>jaspic-common</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/apache-tomcat-${tomcat.version}/conf</outputDirectory>
                                            <includes>tomcat-users.xml</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>tomcat-ci-managed</arquillian.launch>
                                <arquillian.tomcat.catalinaHome>${project.build.directory}/apache-tomcat-${tomcat.version}</arquillian.tomcat.catalinaHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>skipTests</id>
            <activation>
                <property>
                    <name>skipTests</name>
                </property>
            </activation>

            <properties>
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>

                <maven.test.skip>true</maven.test.skip>
                <skipTests>true</skipTests>
            </properties>
        </profile>

        <profile>
            <id>old-tck-runner</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <modules>
                <!-- Runs the old TCK, which is the Javatest based one. It's not entirely clear what this tests, but it includes Java SE like unit tests
                     for setting up factories and checking whether things are on the classpath.
                     TODO: document here what these tests actually test for.
                -->
                <module>old-tck-runner</module>
            </modules>
        </profile>

    </profiles>
</project>
